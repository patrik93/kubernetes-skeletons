# Run a Stateless Application Using a Deployment
# https://kubernetes.io/docs/tasks/run-application/run-stateless-application-deployment/
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    sample: label
  annotations:
    sample: annotations
  name: nginx-deployment
spec:
  selector:
    matchLabels:
      app: nginx
  replicas: 2 # tells deployment to run 2 pods matching the template
  template:
    metadata:
      labels:
        app: nginx
      annotations:
        sample: annotations
    spec:
      containers:
      - name: nginx
        image: nginx:1.14.2
        ports:
        - containerPort: 80

        resources:
          requests:
            cpu: "110m"
            memory: "100Mi"
          limits:
            cpu: "110m"
            memory: "200Mi"
        # Configure Liveness, Readiness and Startup Probes
        # https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
        # These blocks must be placed under containers block

        # Define a TCP readiness probe
        readinessProbe:
          tcpSocket:
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10

        # Define a liveness HTTP request
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
            httpHeaders:
            - name: Custom-Header
              value: Awesome
          initialDelaySeconds: 3
          periodSeconds: 3

        # Define command execution probe
        # readinessProbe:
        #   exec:
        #     command:
        #     - cat
        #     - /tmp/healthy
        #   initialDelaySeconds: 5
        #   periodSeconds: 5

        # Protect slow starting containers with startup probes
        startupProbe:
          httpGet:
            path: /healthz
            port: liveness-port
          failureThreshold: 30
          periodSeconds: 10
  
        # Assign Pods to Nodes
        # https://kubernetes.io/docs/tasks/configure-pod-container/assign-pods-nodes/
        # These sections part must be placed under on the same level to containers
        # 1.
        nodeSelector:
          disktype: ssd
        
        # 2. 
        nodeName: foo-node # schedule pod to specific node
        
        # 3.
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: disktype
                  operator: In
                  values:
                  - ssd     